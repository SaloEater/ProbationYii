<?php
/**
 * Created by PhpStorm.
 * User: Tom
 * Date: 19.11.2018
 * Time: 10:02
 */

namespace bookkeeping\entities\widgets;

use bookkeeping\constants\SelfPostActions;
use bookkeeping\entities\Category;
use yii\base\Widget;
use yii\bootstrap\ButtonDropdown;
use yii\helpers\Html;
use yii\helpers\Url;

class CategoryWidget extends Widget
{
    /**
     * @var Category $rootCategory
     */
    public $rootCategory;

    /**
     * @var Category $parent
     */
    private $parent;

    public function init()
    {
        $this->parent = $this->rootCategory->getParentInstance();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        $isRoot = $this->rootCategory->isRoot();

        if ($isRoot) {
            $curName = '';
        } else {
            $curName = $this->rootCategory->name;
        }

        $selfDropdownItems = [];

        if (!$isRoot) {
            $selfDropdownItems[] = [
                'label' => 'Удалить',
                'url' => Url::current(),
                'linkOptions' => [
                    'data' => [
                        'method' => 'POST',
                        'params' => [
                            'type' => 'self_post',
                            'operation' => SelfPostActions::$category_remove,
                            'id' => $this->rootCategory->id,
                        ],
                    ]
                ]
            ];

            $selfDropdownItems[] = [
                'label' => 'Удалить полностью',
                'url' => Url::current(),
                'linkOptions' => [
                    'data' => [
                        'method' => 'POST',
                        'params' => [
                            'type' => 'self_post',
                            'operation' => SelfPostActions::$category_fullremove,
                            'id' => $this->rootCategory->id,
                        ],
                    ]
                ]
            ];
        }

        if (!$isRoot && !$this->parent->isRoot()) {
            $selfDropdownItems[] = [
                'label' => 'Поднять выше',
                'url' => Url::current(),
                'linkOptions' => [
                    'data' => [
                        'method' => 'POST',
                        'params' => [
                            'type' => 'self_post',
                            'operation' => SelfPostActions::$category_move_to,
                            'id' => $this->rootCategory->id,
                            'destination' => $this->parent->getParentInstance()->id
                        ],
                    ]
                ]
            ];
        }

        if (count($selfDropdownItems) > 0) {
            $selfActions = ButtonDropdown::widget([
                'encodeLabel' => false,
                'label' => '',
                'dropdown' =>[
                    'encodeLabels' => false,
                    'items' => $selfDropdownItems
                ]
            ]);
        } else {
            $selfActions = '';
        }

        $childs = [];

        foreach ($this->rootCategory->getChildren()->all() as $category) {
            $childs[]= ExpensesWidget::widget([
                'rootCategory' => $category
            ]);
        }

        $childView = Html::ul($childs, ['item' => function ($item, $index) {
            return Html::tag(
                'li',
                $item
            );
        }]);

        $categoryDropdownItems = [];

        $categoryDropdownItems[] = [
            'label' => 'Добавить',
            'url' => Url::to(['category/create']),
            'linkOptions' => [
                'data' => [
                    'method' => 'POST',
                    'params' => [
                        'familyId' => $this->rootCategory->familyId,
                        'parentId' => $this->rootCategory->id,
                    ],
                ]
            ]
        ];

        $categoryActions = ButtonDropdown::widget([
            'encodeLabel' => false,
            'label' => '',
            'dropdown' =>[
                'encodeLabels' => false,
                'items' => $categoryDropdownItems
            ]
        ]);

        $transactions = TransactionListWidget::widget([
            'rootCategoryId' => $this->rootCategory->id
        ]);

        $output = '';

        //Сама категория
        $output .= $curName . $selfActions . '<br>';

        $output .= $transactions . '<br>';

        //Подкатегории
        $categoryHeader = 'Подкатегории: '. $categoryActions . '<br>';
        $output .= $categoryHeader
            . $childView;
        return $output;
    }
}